#                                    __   __  __
#                                    \ \ / / / /
#                                     \ V / / /
#                                      \_/  \/
#
#                                    V E C T O R
#                                   Configuration
#
# ------------------------------------------------------------------------------
# Website: https://vector.dev
# Docs: https://vector.dev/docs/
# ------------------------------------------------------------------------------

data_dir = "/var/lib/vector"

[sources.syslog]
  type = "syslog"
  mode = "udp"
  address = "0.0.0.0:5140"

#
# Transform logs into metrics
#
[transforms.regex_parser]
  inputs = ["syslog"]
  type = "regex_parser"
  patterns = ['^(?P<host>[\w\.]+) - (?P<user>[\w-]+) \[(?P<timestamp>.*)\] "(?P<method>[\w]+) (?P<path>.*)" (?P<status>[\d]+) (?P<bytes_out>[\d]+)$']

[transforms.log_to_metric]
  inputs = ["regex_parser"]
  type = "log_to_metric"

[[transforms.log_to_metric.metrics]]
  type = "counter"
  increment_by_value = true
  field = "bytes_out"
  tags = {method = "{{method}}", status = "{{status}}"}

#
# Output Logs into InfluxDB 2
#
[sinks.influxdb_2_logs]
  type = "influxdb_logs"
  inputs = ["regex_parser"]
  namespace = "vector-logs"
  tags = ["appname", "method", "path"]
  endpoint = "http://influxdb.v2:9999"
  org = "my-org"
  bucket = "my-bucket"
  token = "my-token"

[sinks.influxdb_2_logs.request]
  rate_limit_num = 1000

#
# Output Metrics into InfluxDB 2
#
[sinks.influxdb_2_metrics]
  type = "influxdb_metrics"
  inputs = ["log_to_metric"]
  namespace = "vector-metrics"
  endpoint = "http://influxdb.v2:9999"
  org = "my-org"
  bucket = "my-bucket"
  token = "my-token"
  
[sinks.influxdb_2_metrics.request]
  rate_limit_num = 1000

