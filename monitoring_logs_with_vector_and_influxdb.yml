apiVersion: influxdata.com/v2alpha1
kind: Dashboard
metadata:
    name: exciting-ishizaka-578001
spec:
    charts:
      - colors:
          - hex: '#7A65F2'
            name: star
            type: text
        decimalPlaces: 2
        height: 4
        kind: Single_Stat
        name: Metric - Total Bytes Out
        queries:
          - query: "from(bucket: \"my-bucket\")\n  |> range(start: 0)\n  |> filter(fn:
                (r) => r._measurement == \"vector-metrics.bytes_out\")\n  |> filter(fn:
                (r) => r._field == \"value\") \n  |> toInt()\n  |> sum(column: \"_value\")\n
                \ |> map(fn: (r) => ({ r with _value: r._value / 1024 }))"
        suffix: ' KiB'
        width: 6
      - colors:
          - hex: '#00C9FF'
            name: laser
            type: text
        decimalPlaces: 2
        height: 4
        kind: Single_Stat
        name: Log - Requests count
        queries:
          - query: |-
                from(bucket: "my-bucket")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "vector-logs.vector")
                  |> filter(fn: (r) => r._field == "status")
                  |> drop(columns: ["host", "appname", "path"])
                  |> count()
        width: 2
        yPos: 4
      - colors:
          - hex: '#ffffff'
            name: white
            type: text
        fieldOptions:
          - displayName: _start
            fieldName: _start
          - displayName: _stop
            fieldName: _stop
          - displayName: time
            fieldName: _time
            visible: true
          - displayName: method
            fieldName: method
            visible: true
          - displayName: path
            fieldName: path
            visible: true
          - displayName: status
            fieldName: _value
            visible: true
          - displayName: _field
            fieldName: _field
          - displayName: _measurement
            fieldName: _measurement
          - displayName: host
            fieldName: host
          - displayName: metric_type
            fieldName: metric_type
          - displayName: source_type
            fieldName: source_type
          - displayName: appname
            fieldName: appname
        height: 4
        kind: Table
        name: Log - Requests
        queries:
          - query: |-
                from(bucket: "my-bucket")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r["_measurement"] == "vector-logs.vector")
                  |> filter(fn: (r) => r["_field"] == "status")
                  |> drop(columns: ["appname", "metric_type", "source_type", "_field", "_measurement", "host"])
        tableOptions:
            sortBy: _time
            verticalTimeAxis: true
        timeFormat: YYYY-MM-DD HH:mm:ss
        width: 10
        xPos: 2
        yPos: 4
      - axes:
          - base: "10"
            name: x
            scale: linear
          - base: "10"
            name: y
            scale: linear
        colors:
          - hex: '#FDC44F'
            name: Cthulhu
            type: scale
          - hex: '#007C76'
            name: Cthulhu
            type: scale
          - hex: '#8983FF'
            name: Cthulhu
            type: scale
        geom: line
        height: 4
        kind: Xy
        name: Metric - Bytes Out
        position: overlaid
        queries:
          - query: |-
                from(bucket: "my-bucket")
                  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
                  |> filter(fn: (r) => r._measurement == "vector-metrics.bytes_out")
                  |> filter(fn: (r) => r._field == "value")
        width: 6
        xCol: _time
        xPos: 6
        yCol: _value
    name: Monitoring Logs with Vector and InfluxDB
